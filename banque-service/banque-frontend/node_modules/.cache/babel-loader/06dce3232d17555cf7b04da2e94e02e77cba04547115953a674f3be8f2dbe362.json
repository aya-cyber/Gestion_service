{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\h7018\\\\Documents\\\\banque-service\\\\banque-service\\\\banque-frontend\\\\src\\\\components\\\\AddTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, gql } from '@apollo/client';\n\n// GraphQL Mutation pour ajouter une transaction\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_TRANSACTION = gql`\n  mutation addTransaction($transactionRequest: TransactionInput!) {\n    addTransaction(transactionRequest: $transactionRequest) {\n      id\n      montant\n      date\n      type\n      compte {\n        id\n        solde\n      }\n    }\n  }\n`;\n\n// GraphQL Query pour récupérer les comptes\nconst GET_COMPTES = gql`\n  query {\n    allComptes {\n      id\n      solde\n      dateCreation\n      type\n    }\n  }\n`;\nconst AddTransaction = ({\n  compteId\n}) => {\n  _s();\n  const [montant, setMontant] = useState('');\n  const [date, setDate] = useState('');\n  const [type, setType] = useState('DEPOT'); // 'DEPOT' par défaut\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_COMPTES); // Utilisation de useQuery pour récupérer les comptes\n  const [addTransaction] = useMutation(ADD_TRANSACTION, {\n    refetchQueries: [{\n      query: GET_TRANSACTIONS,\n      variables: {\n        compteId\n      } // Rafraîchir les transactions du compte sélectionné\n    }]\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Vérifier les données avant d'envoyer la mutation\n    if (!compteId || !montant || !date || !type) {\n      alert('Tous les champs doivent être remplis');\n      return;\n    }\n\n    // Appel à la mutation GraphQL pour ajouter une transaction\n    addTransaction({\n      variables: {\n        transactionRequest: {\n          compteId: parseInt(compteId),\n          // Assurez-vous de convertir les IDs\n          montant: parseFloat(montant),\n          date: date,\n          type: type\n        }\n      }\n    }).then(response => {\n      console.log('Transaction ajoutée:', response.data.addTransaction);\n      alert('Transaction ajoutée avec succès');\n    }).catch(error => {\n      console.error('Erreur lors de l\\'ajout de la transaction:', error);\n      alert('Une erreur est survenue lors de l\\'ajout de la transaction.');\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement des comptes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter une Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Compte:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: compteId,\n          onChange: e => setCompteId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"S\\xE9lectionner un compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), data.allComptes.map(compte => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: compte.id,\n            children: [\"Compte \", compte.id, \" (\", compte.type, \" - Solde: \", compte.solde, \"\\u20AC)\"]\n          }, compte.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Montant:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: montant,\n          onChange: e => setMontant(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type de transaction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DEPOT\",\n            children: \"D\\xE9p\\xF4t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RETRAIT\",\n            children: \"Retrait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ajouter la transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n};\n_s(AddTransaction, \"NSjmBPS9T8r48KfCwFK2oDusCy4=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = AddTransaction;\nexport default AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"names":["React","useState","useMutation","useQuery","gql","jsxDEV","_jsxDEV","ADD_TRANSACTION","GET_COMPTES","AddTransaction","compteId","_s","montant","setMontant","date","setDate","type","setType","loading","error","data","addTransaction","refetchQueries","query","GET_TRANSACTIONS","variables","handleSubmit","e","preventDefault","alert","transactionRequest","parseInt","parseFloat","then","response","console","log","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onSubmit","value","onChange","setCompteId","target","allComptes","map","compte","id","solde","step","required","_c","$RefreshReg$"],"sources":["C:/Users/h7018/Documents/banque-service/banque-service/banque-frontend/src/components/AddTransaction.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation, useQuery, gql } from '@apollo/client';\r\n\r\n// GraphQL Mutation pour ajouter une transaction\r\nconst ADD_TRANSACTION = gql`\r\n  mutation addTransaction($transactionRequest: TransactionInput!) {\r\n    addTransaction(transactionRequest: $transactionRequest) {\r\n      id\r\n      montant\r\n      date\r\n      type\r\n      compte {\r\n        id\r\n        solde\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// GraphQL Query pour récupérer les comptes\r\nconst GET_COMPTES = gql`\r\n  query {\r\n    allComptes {\r\n      id\r\n      solde\r\n      dateCreation\r\n      type\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddTransaction = ({ compteId }) => {\r\n  const [montant, setMontant] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [type, setType] = useState('DEPOT'); // 'DEPOT' par défaut\r\n  const { loading, error, data } = useQuery(GET_COMPTES); // Utilisation de useQuery pour récupérer les comptes\r\n  const [addTransaction] = useMutation(ADD_TRANSACTION, {\r\n    refetchQueries: [\r\n      {\r\n        query: GET_TRANSACTIONS,\r\n        variables: { compteId }, // Rafraîchir les transactions du compte sélectionné\r\n      },\r\n    ],\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Vérifier les données avant d'envoyer la mutation\r\n    if (!compteId || !montant || !date || !type) {\r\n      alert('Tous les champs doivent être remplis');\r\n      return;\r\n    }\r\n\r\n    // Appel à la mutation GraphQL pour ajouter une transaction\r\n    addTransaction({\r\n      variables: {\r\n        transactionRequest: {\r\n          compteId: parseInt(compteId), // Assurez-vous de convertir les IDs\r\n          montant: parseFloat(montant),\r\n          date: date,\r\n          type: type,\r\n        },\r\n      },\r\n    })\r\n        .then((response) => {\r\n          console.log('Transaction ajoutée:', response.data.addTransaction);\r\n          alert('Transaction ajoutée avec succès');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erreur lors de l\\'ajout de la transaction:', error);\r\n          alert('Une erreur est survenue lors de l\\'ajout de la transaction.');\r\n        });\r\n  };\r\n\r\n  if (loading) return <p>Chargement des comptes...</p>;\r\n  if (error) return <p>Erreur: {error.message}</p>;\r\n\r\n  return (\r\n      <div>\r\n        <h2>Ajouter une Transaction</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Compte:</label>\r\n            <select value={compteId} onChange={(e) => setCompteId(e.target.value)}>\r\n              <option value=\"\">Sélectionner un compte</option>\r\n              {data.allComptes.map((compte) => (\r\n                  <option key={compte.id} value={compte.id}>\r\n                    Compte {compte.id} ({compte.type} - Solde: {compte.solde}€)\r\n                  </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label>Montant:</label>\r\n            <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={montant}\r\n                onChange={(e) => setMontant(e.target.value)}\r\n                required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Date:</label>\r\n            <input\r\n                type=\"date\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Type de transaction:</label>\r\n            <select value={type} onChange={(e) => setType(e.target.value)}>\r\n              <option value=\"DEPOT\">Dépôt</option>\r\n              <option value=\"RETRAIT\">Retrait</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\">Ajouter la transaction</button>\r\n        </form>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}