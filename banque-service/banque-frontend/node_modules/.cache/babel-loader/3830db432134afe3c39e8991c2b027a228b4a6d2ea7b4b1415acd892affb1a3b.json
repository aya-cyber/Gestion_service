{"ast":null,"code":"import React,{useState}from'react';import{useQuery,useMutation}from'@apollo/client';import{GET_ALL_COMPTES}from'../graphql/queries';import{DELETE_COMPTE}from'../graphql/mutations';import TransactionsList from'./TransactionsList';// Assurez-vous d'avoir ce composant pour afficher les transactions\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ComptesList(){const{loading,error,data}=useQuery(GET_ALL_COMPTES);const[deleteCompte]=useMutation(DELETE_COMPTE,{refetchQueries:[{query:GET_ALL_COMPTES}]});const[selectedCompteId,setSelectedCompteId]=useState(null);// Etat pour le compte sélectionné\nif(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Chargement...\"});if(error)return/*#__PURE__*/_jsxs(\"p\",{children:[\"Erreur : \",error.message]});const handleDelete=async id=>{if(window.confirm('Êtes-vous sûr de vouloir supprimer ce compte ?')){await deleteCompte({variables:{id}});alert('Compte supprimé avec succès.');}};const totalSolde=data.allComptes.reduce((acc,compte)=>acc+compte.solde,0);const moyenneSolde=totalSolde/data.allComptes.length;// Fonction pour sélectionner un compte et afficher ses transactions\nconst handleSelectCompte=compteId=>{setSelectedCompteId(compteId);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Gestion des Comptes\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Liste des Comptes\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',gap:'20px'},children:data.allComptes.map(compte=>/*#__PURE__*/_jsxs(\"div\",{style:{border:'1px solid #ddd',borderRadius:'10px',padding:'20px',backgroundColor:'#fff',width:'250px'},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Compte ID: \",compte.id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Solde: \",compte.solde,\" \\u20AC\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date de cr\\xE9ation: \",compte.dateCreation]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Type: \",compte.type]}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:'#e74c3c',color:'#fff',padding:'10px',borderRadius:'5px',border:'none',cursor:'pointer'},onClick:()=>handleDelete(compte.id),children:\"Supprimer\"}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:'#3498db',color:'#fff',padding:'10px',borderRadius:'5px',border:'none',cursor:'pointer',marginTop:'10px'},onClick:()=>handleSelectCompte(compte.id)// Sélectionner le compte pour afficher les transactions\n,children:\"Voir les transactions\"})]},compte.id))}),selectedCompteId&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Transactions du Compte ID: \",selectedCompteId]}),/*#__PURE__*/_jsx(TransactionsList,{compteId:selectedCompteId}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',padding:'10px',backgroundColor:'#f0f8ff',borderRadius:'10px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Nombre total de comptes : \",data.allComptes.length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Somme des soldes : \",totalSolde,\" \\u20AC\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Moyenne des soldes : \",moyenneSolde.toFixed(2),\" \\u20AC\"]})]})]});}export default ComptesList;","map":{"version":3,"names":["React","useState","useQuery","useMutation","GET_ALL_COMPTES","DELETE_COMPTE","TransactionsList","jsx","_jsx","jsxs","_jsxs","ComptesList","loading","error","data","deleteCompte","refetchQueries","query","selectedCompteId","setSelectedCompteId","children","message","handleDelete","id","window","confirm","variables","alert","totalSolde","allComptes","reduce","acc","compte","solde","moyenneSolde","length","handleSelectCompte","compteId","style","display","flexWrap","gap","map","border","borderRadius","padding","backgroundColor","width","dateCreation","type","color","cursor","onClick","marginTop","toFixed"],"sources":["C:/Users/h7018/Documents/banque-service/banque-service/banque-frontend/src/components/ComptesList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_COMPTES } from '../graphql/queries';\r\nimport { DELETE_COMPTE } from '../graphql/mutations';\r\nimport TransactionsList from './TransactionsList'; // Assurez-vous d'avoir ce composant pour afficher les transactions\r\n\r\nfunction ComptesList() {\r\n  const { loading, error, data } = useQuery(GET_ALL_COMPTES);\r\n  const [deleteCompte] = useMutation(DELETE_COMPTE, {\r\n    refetchQueries: [{ query: GET_ALL_COMPTES }],\r\n  });\r\n  const [selectedCompteId, setSelectedCompteId] = useState(null); // Etat pour le compte sélectionné\r\n\r\n  if (loading) return <p>Chargement...</p>;\r\n  if (error) return <p>Erreur : {error.message}</p>;\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce compte ?')) {\r\n      await deleteCompte({ variables: { id } });\r\n      alert('Compte supprimé avec succès.');\r\n    }\r\n  };\r\n\r\n  const totalSolde = data.allComptes.reduce((acc, compte) => acc + compte.solde, 0);\r\n  const moyenneSolde = totalSolde / data.allComptes.length;\r\n\r\n  // Fonction pour sélectionner un compte et afficher ses transactions\r\n  const handleSelectCompte = (compteId) => {\r\n    setSelectedCompteId(compteId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gestion des Comptes</h1>\r\n      <h2>Liste des Comptes</h2>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n        {data.allComptes.map((compte) => (\r\n          <div\r\n            key={compte.id}\r\n            style={{\r\n              border: '1px solid #ddd',\r\n              borderRadius: '10px',\r\n              padding: '20px',\r\n              backgroundColor: '#fff',\r\n              width: '250px',\r\n            }}\r\n          >\r\n            <h3>Compte ID: {compte.id}</h3>\r\n            <p>Solde: {compte.solde} €</p>\r\n            <p>Date de création: {compte.dateCreation}</p>\r\n            <p>Type: {compte.type}</p>\r\n\r\n            {/* Bouton de suppression */}\r\n            <button\r\n              style={{\r\n                backgroundColor: '#e74c3c',\r\n                color: '#fff',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                border: 'none',\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={() => handleDelete(compte.id)}\r\n            >\r\n              Supprimer\r\n            </button>\r\n\r\n            {/* Bouton pour afficher les transactions */}\r\n            <button\r\n              style={{\r\n                backgroundColor: '#3498db',\r\n                color: '#fff',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                border: 'none',\r\n                cursor: 'pointer',\r\n                marginTop: '10px',\r\n              }}\r\n              onClick={() => handleSelectCompte(compte.id)} // Sélectionner le compte pour afficher les transactions\r\n            >\r\n              Voir les transactions\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Afficher les transactions du compte sélectionné */}\r\n      {selectedCompteId && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h2>Transactions du Compte ID: {selectedCompteId}</h2>\r\n          <TransactionsList compteId={selectedCompteId} /> {/* Passer l'ID du compte aux transactions */}\r\n        </div>\r\n      )}\r\n\r\n      {/* Statistiques */}\r\n      <div style={{ marginTop: '20px', padding: '10px', backgroundColor: '#f0f8ff', borderRadius: '10px' }}>\r\n        <p>Nombre total de comptes : {data.allComptes.length}</p>\r\n        <p>Somme des soldes : {totalSolde} €</p>\r\n        <p>Moyenne des soldes : {moyenneSolde.toFixed(2)} €</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComptesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}